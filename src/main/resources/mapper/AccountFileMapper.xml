<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="priv.muller.mapper.AccountFileMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="priv.muller.model.AccountFileDO">
        <id column="id" property="id" />
        <result column="account_id" property="accountId" />
        <result column="is_dir" property="isDir" />
        <result column="parent_id" property="parentId" />
        <result column="file_id" property="fileId" />
        <result column="file_name" property="fileName" />
        <result column="file_type" property="fileType" />
        <result column="file_suffix" property="fileSuffix" />
        <result column="file_size" property="fileSize" />
        <result column="del" property="del" />
        <result column="del_time" property="delTime" />
        <result column="gmt_modified" property="gmtModified" />
        <result column="gmt_create" property="gmtCreate" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, account_id, is_dir, parent_id, file_id, file_name, file_type, file_suffix, file_size, del, del_time, gmt_modified, gmt_create
    </sql>

    <!--批量插入-->
    <insert id="insertFileBatch" parameterType="java.util.List">
        INSERT INTO account_file (id,account_id, is_dir, parent_id, file_id, file_name, file_type, file_suffix, file_size, del, del_time)
        VALUES
        <foreach collection="newAccountFileDOList" item="item" separator=",">
            (#{item.id},#{item.accountId}, #{item.isDir}, #{item.parentId}, #{item.fileId}, #{item.fileName}, #{item.fileType},
             #{item.fileSuffix}, #{item.fileSize}, #{item.del}, #{item.delTime})
        </foreach>

    </insert>
    <!--更新回收站的文件名称-->
    <update id="updateRecycleFileNameById">
        UPDATE account_file SET file_name=#{fileName} WHERE id=#{id} and del=1
    </update>


    <!--批量还原回收站文件-->
    <update id="restoreFiles" parameterType="java.util.List">
        UPDATE account_file SET del=0  WHERE id IN
        <foreach collection="allFileIds" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>

    </update>


    <!--彻底删除文件-->
    <delete id="deleteRecycleFiles">

        DELETE FROM account_file WHERE del=1 and id IN
        <foreach collection="recycleFileIds" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <!--查询被删除的文件，根据accountid-->
    <select id="selectRecycleFiles" resultType="priv.muller.model.AccountFileDO">
        SELECT * FROM account_file WHERE account_id = #{accountId} AND del = 1
        <if test="fileIdList !=null">
            and id in
            <foreach collection="fileIdList" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>

    </select>

    <select id="selectRecycleChildFiles" resultType="priv.muller.model.AccountFileDO">
        SELECT * FROM account_file WHERE parent_id = #{parentId} AND del = 1 and account_id=#{accountId}

    </select>

</mapper>
